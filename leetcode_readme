1.leetcode_2_Add_Two_Numbers
对于列表指针，使用while(l1 != NULL)等，在循环中加入l1 = l1->next;

while (l1 != NULL) {
	...
	l1 = l1->next;
}


2.leetcode_3_Longest_Substring_Without_Repeating_Characters
string
string s;
(1).s.substr(i, l).find(ch);

从s的i开始的l长度的子串。
注意，假设i是从5开始，则是从返回的子串中再find()，因此，对于find来说是从0开始的。

(2).if ((int)s.find(ch) == -1) {

}

(3).
#include <memory.h>

memset();

3.leetcode_344_Reverse_String
(1).string 定义好后，不可以更改。


4.leetcode_237_Delete_Node_in_a_Linked_List
(1).
*node = *next;
把node内容和指针都复制

5.leetcode_234_Palindrome_Linked_List
(1).
1->2->3->4->3->2->1

a:
1->2->3->4  3<-2<-1
         |        ^
		 |--------|
head              low
    	low->next = reverseList(low->next);
    	low = low->next;
OR

b:
1->2->3->4->3<-2<-1
head             low
Pay attention: reverseList(low->next)


